ggplot(x, aes(V2, V1, fill = V3)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("") +
ylab("Number of DE regions") +
geom_hline(yintercept = 0) +
#scale_fill_manual(values = c("#3E4A89FF", "#c51b8a")) +
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = NA, colour = "gray", size = 1),
strip.background =element_rect(fill="white"),
axis.text = element_text(color = "black")) +
coord_flip()
head(x)
unique(x$V3)
x$V3 = factor(x$V3, levels = c( "NBC", "GCBC",, "MBC",  "PBC", "CLL"))
x$V3 = factor(x$V3, levels = c( "NBC", "GCBC", "MBC",  "PBC", "CLL"))
ggplot(x, aes(V2, V1, fill = V3)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("") +
ylab("Number of DE regions") +
geom_hline(yintercept = 0) +
#scale_fill_manual(values = c("#3E4A89FF", "#c51b8a")) +
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = NA, colour = "gray", size = 1),
strip.background =element_rect(fill="white"),
axis.text = element_text(color = "black")) +
coord_flip()
ggplot(x, aes(V2, V1, fill = V3)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("") +
ylab("Number of DE regions") +
geom_hline(yintercept = 0) +
scale_fill_manual(values = c("#636363", "#35B779FF", "#26828EFF", "#3E4A89FF",  "#C61D8A")) +
theme(panel.background = element_rect(fill = "white"),
panel.border = element_rect(fill = NA, colour = "gray", size = 1),
strip.background =element_rect(fill="white"),
axis.text = element_text(color = "black")) +
coord_flip()
ggplot(x, aes(V2, V1, fill = V3)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("") +
ylab("Number of DE regions") +
geom_hline(yintercept = 0) +
scale_fill_manual(values = c("#636363", "#35B779FF", "#26828EFF", "#3E4A89FF",  "#C61D8A")) +
theme_bw()
ggplot(x, aes(V2, V1, fill = V3)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("") +
ylab("Number of DE regions") +
geom_hline(yintercept = 0) +
scale_fill_manual(values = c("#636363", "#35B779FF", "#26828EFF", "#3E4A89FF",  "#C61D8A")) +
theme_bw() +
coord_flip()
ggsave("../plot/Num_DE_regions_cell_vs_others_6marks.pdf", width = 20, height = 20, units = "cm")
x
View(x)
## cll vs others
#total de count
x = read.table("../data/cll_bcell/count_enriched_u.mcll.txt")
x
x %>% filter(V3 == "CLL")
x %>% filter(V3 == "CLL") %>% summarise(mean(V3))
x %>% filter(V3 == "CLL") %>% summarise(mean(V1))
x %>% filter(V3 == "B-cell") %>% summarise(mean(V1))
x %>% filter(V3 == "B-cell") %>% summarise(mean(V1), sum(V1))
x %>% filter(V3 == "CLL") %>% summarise(mean(V1), sum(V1))
17991.5  /107949
x %>% filter(V3 == "B-cell") %>% summarise(mean(V1), sum(V1))
-30782/ -184692
x = read.table("../data/de_chipseq/enrichement_over_each_other/de_up_dn_all_cell.txt")
x
x %>% filter(V3 == "CLL")
x %>% filter(V3 == "CLL") %>% filter(V4 == "enriched")
x %>% filter(V3 == "CLL") %>% filter(V4 == "enriched") %>% summarise(sum(V1))
x %>% filter(V4 == "enriched") %>% summarise(sum(V1))
107944/505004
x %>% filter(V4 == "enriched")
x %>% filter(V4 == "enriched") %>% group_by(V2) %>% summarise(sum(V1))
c = x %>% filter(V3 == "CLL") %>% filter(V4 == "enriched") %>%  group_by(V2) %>% summarise(sum(V1))
t = x %>% filter(V4 == "enriched") %>% group_by(V2) %>% summarise(sum(V1))
c
t
c$`sum(V1)`/t$`sum(V1)`
# % cll specific enrichment
c$`sum(V1)`/t$`sum(V1)`
g = x %>% filter(V3 == "CLL") %>% filter(V4 == "enriched") %>%  group_by(V2) %>% summarise(sum(V1))
g$`sum(V1)`/t$`sum(V1)`
g = x %>% filter(V3 == "CLL") %>% filter(V4 == "enriched") %>%  group_by(V2) %>% summarise(sum(V1))
g
g$`sum(V1)`/t$`sum(V1)`
mean(g$`sum(V1)`/t$`sum(V1)`)
t = x %>% group_by(V2) %>% summarise(sum(V1))
# % cll specific enrichment
c$`sum(V1)`/t$`sum(V1)`
# % cll specific enrichment
mean(c$`sum(V1)`/t$`sum(V1)`)
mean(g$`sum(V1)`/t$`sum(V1)`)
cn = x %>% filter(V3 == "CLL") %>% filter(V4 == "not") %>%  group_by(V2) %>% summarise(sum(V1))
# % cll specific enrichment
mean(c$`sum(V1)`/t$`sum(V1)`)
mean(cn$`sum(V1)`/t$`sum(V1)`)
t
mean(cn$`sum(V1)`/t$`sum(V1)`)
abs(mean(cn$`sum(V1)`/t$`sum(V1)`))
t = x %>% group_by(V2) %>% summarise(sum(abs(V1)))
t
c = x %>% filter(V3 == "CLL") %>% filter(V4 == "enriched") %>%  group_by(V2) %>% summarise(sum(abs(V1)))
c
cn = x %>% filter(V3 == "CLL") %>% filter(V4 == "not") %>%  group_by(V2) %>% summarise(sum(abs(V1)))
t = x %>% group_by(V2) %>% summarise(sum(abs(V1)))
# % cll specific enrichment
mean(c$`sum(V1)`/t$`sum(V1)`)
t
c
c$`sum(abs(V1))`/t$`sum(abs(V1))`
mean(c$`sum(abs(V1))`/t$`sum(abs(V1))`)
mean(c$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
mean(cn$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
x %>% filter(V3 == "CLL") %>% filter(V4 == "not")
x %>% filter(V3 == "CLL") %>% filter(V4 == "not") %>%  group_by(V2) %>% summarise(sum(abs(V1)))
cn
sum(cn$`sum(abs(V1))`)
# % cll specific enrichment
mean(c$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
c
cn
# % cll specific enrichment
mean(c$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
mean(cn$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
g = x %>% filter(V3 == "GCBC") %>% filter(V4 == "enriched") %>%  group_by(V2) %>% summarise(sum(abs(V1)))
gn = x %>% filter(V3 == "GCBC") %>% filter(V4 == "not") %>%  group_by(V2) %>% summarise(sum(abs(V1)))
mean(g$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
mean(gn$`sum(abs(V1))`/t$`sum(abs(V1))`)*100
cn
c
3.4019e-3 <0.001
3.4019e-3 <0.01
3.4019e-3 <0.05
3.4019e-3 <0.001
3.4019e-3 <0.01
2.1473e-2 <0.01
2.1473e-2 < 0.01
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
x
View(x)
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
x
View(x)
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
x
View(x)
colnames(x)
ggplot(x, aes(x$`Term Name`, x$`Hyper FDR Q-Val`, fill = V3)) +
geom_bar(stat = "identity")
ggplot(x, aes(x$`Term Name`, x$`Hyper FDR Q-Val`)) +
geom_bar(stat = "identity")
ggplot(x, aes(x$`Term Name`, x$`Hyper FDR Q-Val`)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Number of DE regions") +
coord_flip()
ggplot(x, aes(x$`Term Name`, x$`Hyper FDR Q-Val`)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Hypergeometric FDR Q-Value") +
coord_flip()
head(x)
x %>% filter(`Hyper FDR Q-Val` <= 0.01) %>%
ggplot(aes(x$`Term Name`, x$`Hyper FDR Q-Val`)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Hypergeometric FDR Q-Value") +
coord_flip()
x2 = x %>% filter(`Hyper FDR Q-Val` <= 0.01) %>%
ggplot(aes(x$`Term Name`, x$`Hyper FDR Q-Val`)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Hypergeometric FDR Q-Value") +
coord_flip()
x2 = x %>% filter(`Hyper FDR Q-Val` <= 0.01)
x = x %>% filter(`Hyper FDR Q-Val` <= 0.01)
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
x = x %>% filter(`Hyper FDR Q-Val` <= 0.01)
ggplot(x, aes(x$`Term Name`, x$`Hyper FDR Q-Val`)) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Hypergeometric FDR Q-Value") +
coord_flip()
ggplot(x, aes(x$`Term Name`, -log10(x$`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("Hypergeometric FDR Q-Value") +
coord_flip()
ggplot(x, aes(x$`Term Name`, -log10(x$`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip()
ggplot(x, aes(x$`Term Name`, -log10(x$`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>%
ggplot(aes(x$`Term Name`, -log10(x$`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>%
ggplot(aes(`Term Name`, -log10(x$`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>%
ggplot(aes(`Term Name`, -log10(`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
x %>% filter(`Hyper FDR Q-Val` <= 0.01) %>%
mutate(`Hyper FDR Q-Val` = fct_infreq(`Hyper FDR Q-Val`)) %>%
ggplot(aes(`Term Name`, -log10(`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(`Hyper FDR Q-Val` <= 0.01) %>%
mutate("Hyper FDR Q-Val" = fct_infreq(`Hyper FDR Q-Val`)) %>%
ggplot(aes(`Term Name`, -log10(`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(`Hyper FDR Q-Val` <= 0.01) %>%
mutate(`Hyper FDR Q-Val` = fct_infreq(`Hyper FDR Q-Val`)) %>%
ggplot(aes(`Term Name`, -log10(`Hyper FDR Q-Val`))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(`Hyper FDR Q-Val` <= 0.01) %>%
mutate(`Hyper FDR Q-Val` = fct_infreq(`Hyper FDR Q-Val`))
#great
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
colnames(x)
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(Hyper_FDR_QVal = fct_infreq(Hyper_FDR_QVal)) %>%
ggplot(aes(`Term Name`, -log10(Hyper_FDR_QVal))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(Hyper_FDR_QVal <= 0.01)
#great
library(forcats)
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(Hyper_FDR_QVal = fct_infreq(Hyper_FDR_QVal)) %>%
ggplot(aes(`Term Name`, -log10(Hyper_FDR_QVal))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x = read_tsv("../data/de_chipseq/greatExportAll_H3K4me1_CLL.tsv")
colnames(x)
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_infreq(TermName)) %>%
ggplot(aes(`Term Name`, -log10(Hyper_FDR_QVal))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_infreq(TermName)) %>%
ggplot(aes(TermName, -log10(Hyper_FDR_QVal))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_infreq(TermName, Hyper_FDR_QVal)) %>%
ggplot(aes(TermName, -log10(Hyper_FDR_QVal))) +
geom_bar(stat = "identity") +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
coord_flip() +
theme_bw()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_reorder(TermName, Hyper_FDR_QVal)) %>%
ggplot(aes(x = TermName, y = Hyper_FDR_QVal)) +
geom_col()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_reorder(TermName, Hyper_FDR_QVal)) %>%
ggplot(aes(x = TermName, y = Hyper_FDR_QVal)) +
geom_col() +
coord_flip()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_reorder(TermName, Hyper_FDR_QVal)) %>%
ggplot(aes(x = TermName, y = -log10(Hyper_FDR_QVal))) +
geom_col() +
coord_flip()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_reorder(TermName, -log10(Hyper_FDR_QVal))) %>%
ggplot(aes(x = TermName, y = -log10(Hyper_FDR_QVal))) +
geom_col() +
coord_flip()
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
theme_bw()
x %>% filter(Hyper_FDR_QVal <= 0.01) %>%
mutate(TermName = fct_reorder(TermName, -log10(Hyper_FDR_QVal))) %>%
ggplot(aes(x = TermName, y = -log10(Hyper_FDR_QVal))) +
geom_col() +
coord_flip() +
xlab("") +
ylab("-log10(Hypergeometric FDR Q-Value)") +
theme_bw()
ggsave("../plot/H3K4me1_CLL_GREAT.pdf", width = 20, height = 20, units = "cm")
setwd("~/Documents/bcell_cll/script/")
getwd()
library(gdata)
library(tidyverse)
library(pheatmap)
library(ggrepel)
library(reshape2)
library(factoextra)
#install.packages("htmltools")
#library(htmltools)
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library("DESeq2")
library(tidyverse)
setwd("../data/RNAseq/")
getwd()
setwd("../data/RNA-seq/")
#### data
x = read.table("table_CEMT_ReadCount_hg38_CLL_Bcell.txt", head = T)
y = read.table("table_EGA_ReadCount_35Samples.txt", head = T)
#### data
x = read.table("table_CEMT_ReadCount_hg38_CLL_Bcell.txt", head = T)
y = read.table("table_EGA_ReadCount_35Samples.txt", head = T)
k2 = inner_join(x,y, by = c("ENSG"))
# dataset_df
countData = k2 %>% select(-"ENSG") %>% select(-contains("HMPC")) %>% select(-contains("CLP"))
row.names(countData) <-  (k2$ENSG)
head(countData)
mcll = c( "CLL.110", "CLL.1228",  "CLL.1525", "CLL.1532",  "CLL.3", "CLL_97", "CLL_93", "CLL_96", "CLL_94", "CLL_6", "CLL_28", "CLL_5", "CLL_26", "CLL_25",  "CLL_1")
ucll = c("CLL.12", "CLL.182", "CLL_92", "CLL_95", "CLL_30", "CLL_27", "CLL_29", "CLL_4")
#
metaData = data.frame(Sample = colnames(countData))
metaData$Group <- ifelse(metaData$Sample %in% mcll, "mCLL",
ifelse(metaData$Sample %in% ucll, "uCLL",
ifelse(grepl("MBC", metaData$Sample, ignore.case = T), "MBC",
ifelse(grepl("HMPC", metaData$Sample, ignore.case = T), "HMPC",
ifelse(grepl("NBC", metaData$Sample, ignore.case = T), "NBC",
ifelse(grepl("PBC", metaData$Sample, ignore.case = T), "PBC",
ifelse(grepl("PreBC", metaData$Sample, ignore.case = T), "PreBC",
ifelse(grepl("GCBC", metaData$Sample, ignore.case = T), "GCBC",
ifelse(grepl("CLP", metaData$Sample, ignore.case = T), "CLP", "nothing")))))))))
metaData %>%
dplyr::group_by(Group) %>%
dplyr::summarise(n = n())
##
Groups = as.factor(metaData$Group)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData, DataFrame(Groups), ~ Groups)
dds <- DESeq(dds)
#pca
vsdata <- vst(dds, blind=FALSE)
## export variance stabilized data
head(assay(vsdata), 3)
plotPCA(vsdata, intgroup="Groups")
#get pca data
pcaData <- plotPCA(vsdata, intgroup="Groups", returnData = TRUE)
head(pcaData)
factor(levels(pcaData$group))
#RNA
pcaData = read.table("../data/RNA-seq/PCA_RNAseq_with_HMPC.tsv") #need to use this in final plot
getwd()
pcaData = read.table("../../data/RNA-seq/PCA_RNAseq_with_HMPC.tsv")
pcaData
# dataset_df
countData = k2 %>% select(-"ENSG") %>% select(-contains("HMPC"))
# dataset_df; remove cell that do not have histone data
countData = k2 %>% select(-"ENSG") %>% select(-contains("HMPC")) %>% select(-contains("CLP"))
row.names(countData) <-  (k2$ENSG)
head(countData)
metaData %>%
dplyr::group_by(Group) %>%
dplyr::summarise(n = n())
##
Groups = as.factor(metaData$Group)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData, DataFrame(Groups), ~ Groups)
#pca
vsdata <- vst(dds, blind=FALSE)
## export variance stabilized data
head(assay(vsdata), 3)
plotPCA(vsdata, intgroup="Groups")
#get pca data
pcaData <- plotPCA(vsdata, intgroup="Groups", returnData = TRUE)
head(pcaData)
factor(levels(pcaData$group))
#create pair-wise contrasts
co = unique(metaData$Group)
co
#### data
x = read.table("table_CEMT_ReadCount_hg38_CLL_Bcell.txt", head = T)
y = read.table("table_EGA_ReadCount_35Samples.txt", head = T)
k2 = inner_join(x,y, by = c("ENSG"))
# dataset_df; remove cell that do not have histone data
countData = k2 %>% select(-"ENSG") %>% select(-contains("HMPC")) %>% select(-contains("CLP"))
row.names(countData) <-  (k2$ENSG)
head(countData)
mcll = c( "CLL.110", "CLL.1228",  "CLL.1525", "CLL.1532",  "CLL.3", "CLL_97", "CLL_93", "CLL_96", "CLL_94", "CLL_6", "CLL_28", "CLL_5", "CLL_26", "CLL_25",  "CLL_1")
ucll = c("CLL.12", "CLL.182", "CLL_92", "CLL_95", "CLL_30", "CLL_27", "CLL_29", "CLL_4")
#
metaData = data.frame(Sample = colnames(countData))
metaData$Group <- ifelse(metaData$Sample %in% mcll, "CLL",
ifelse(metaData$Sample %in% ucll, "CLL", "Bcell"))
metaData %>%
dplyr::group_by(Group) %>%
dplyr::summarise(n = n())
##
Groups = as.factor(metaData$Group)
#Construct DESEQDataSet Object
dds <- DESeqDataSetFromMatrix(countData, DataFrame(Groups), ~ Groups)
dds <- DESeq(dds)
#pca
vsdata <- vst(dds, blind=FALSE)
## export variance stabilized data
head(assay(vsdata), 3)
plotPCA(vsdata, intgroup="Groups")
#get pca data
pcaData <- plotPCA(vsdata, intgroup="Groups", returnData = TRUE)
head(pcaData)
factor(levels(pcaData$group))
pcaData$group = factor(pcaData$group, levels = c("Bcell", "CLL"))
#create pair-wise contrasts
co = unique(metaData$Group)
co
setwd("./DESeq2_uCLL_mCLL_Bcells_v2/")
getwd()
setwd("/DESeq2_uCLL_mCLL_Bcells_v2/")
getwd()
setwd("/DESeq2_uCLL_mCLL_Bcells/")
setwd("./DESeq2_uCLL_mCLL_Bcells/")
#
for (i in 1:length(co)) {
print(paste("i=", i))
print(as.character(co[i]))
#for (j in (i+1):length(co)) {
for (j in 1:length(co)) {
print(paste("j=", j))
print(as.character(co[j]))
if (co[i] != co[j]) {
res = results(dds, contrast=c("Groups", as.character(co[i]), as.character(co[j])))
top = as.data.frame(subset(res))
write.table(top, paste0(as.character(co[i]),"_vs_" , as.character(co[j]), "_table.txt"), sep = "\t", quote = FALSE, row.names = T, col.names = T)
UP = subset(top, log2FoldChange > 1 & padj <= 0.01)
DN = subset(top, log2FoldChange < -1 & padj <= 0.01)
write.table(UP, paste0(as.character(co[i]),"_vs_" , as.character(co[j]), "_UP.txt"), sep = "\t", quote = FALSE, row.names = T, col.names = T)
write.table(DN, paste0(as.character(co[i]),"_vs_" , as.character(co[j]), "_DN.txt"), sep = "\t", quote = FALSE, row.names = T, col.names = T)
plot.new()
pdf(paste0(as.character(co[i]),"_vs_", as.character(co[j]),".pdf"))
with(res, plot(log2FoldChange, -log10(pvalue), pch=20, main=paste(as.character(co[i])," vs " , as.character(co[j]))))
with(subset(res, padj<.01 & abs(log2FoldChange)>1), points(log2FoldChange, -log10(pvalue), pch=20, col="red"))
dev.off()
#plot MA
plot.new()
pdf(paste0(as.character(co[i]),"_vs_", as.character(co[j]),"_MAplot.pdf"))
plotMA(res, ylim=c(-10,10), main=paste(as.character(co[i])," vs " , as.character(co[j])))
dev.off()
}
}
}
#test example
plotCounts(dds, gene="ENSG00000011426", intgroup="Groups")
#test example
plotCounts(dds, gene="ENSG00000005882", intgroup="Groups")
#test example
plotCounts(dds, gene="ENSG00000125534", intgroup="Groups")
getwd()
up = read.table("Bcell_vs_CLL_DN.txt")
head(up)
#
dn = read.table("Bcell_vs_CLL_DN.txt")
up = read.table("Bcell_vs_CLL_UP.txt")
log2(20)
log2(30)
log2(40)
log2(45)
log2(50)
